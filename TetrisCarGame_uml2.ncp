<Project>
  <Name>GeneratedDiagram</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>first</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>Acceleration</Name>
        <Access>Public</Access>
        <Location left="646" top="773" />
        <Size width="162" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public double Speed</Member>
        <Member type="Field">public MoveDirection MoveDirection</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BotCar</Name>
        <Access>Public</Access>
        <Location left="1285" top="791" />
        <Size width="162" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Field">bool killed</Member>
        <Member type="Field">int lastLifeTicks</Member>
        <Member type="Constructor">public BotCar()</Member>
        <Member type="Method">void Kill()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>EngineModel</Name>
        <Access>Public</Access>
        <Location left="873" top="773" />
        <Size width="268" height="383" />
        <Collapsed>False</Collapsed>
        <Member type="Field">double x</Member>
        <Member type="Field">double y</Member>
        <Member type="Field">Acceleration acceleration</Member>
        <Member type="Field">bool disposed</Member>
        <Member type="Property">protected bool[,] fixture { get; set; }</Member>
        <Member type="Property">protected char[,] texture { get; set; }</Member>
        <Member type="Method">public void SetPosition(double x, double y)</Member>
        <Member type="Method">public double GetX()</Member>
        <Member type="Method">public double GetY()</Member>
        <Member type="Method">public Acceleration GetAcceleration()</Member>
        <Member type="Method">public void SetAcceleration(Acceleration acceleration)</Member>
        <Member type="Method">public abstract void OnColision()</Member>
        <Member type="Method">public abstract void OnAbroad()</Member>
        <Member type="Method">public abstract void OnEveryLoopStart()</Member>
        <Member type="Method">public bool IsDisposed()</Member>
        <Member type="Method">public void Dispose()</Member>
        <Member type="Method">public bool[,] GetFixture()</Member>
        <Member type="Method">public char[,] GetTexture()</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Game</Name>
        <Access>Public</Access>
        <Location left="1375" top="164" />
        <Size width="162" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Method">static void Main(string[] args)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>GameEngine</Name>
        <Access>Public</Access>
        <Location left="757" top="323" />
        <Size width="426" height="400" />
        <Collapsed>False</Collapsed>
        <Member type="Field">List&lt;EngineModel&gt; engineModelsList</Member>
        <Member type="Field">double speedModificator</Member>
        <Member type="Field">int width</Member>
        <Member type="Field">int height</Member>
        <Member type="Constructor">public GameEngine(int width, int height)</Member>
        <Member type="Method">public int GetWidth()</Member>
        <Member type="Method">public int GetHeight()</Member>
        <Member type="Method">public void AddEngineModel(EngineModel engineModel)</Member>
        <Member type="Method">public void NextTick()</Member>
        <Member type="Method">public int[,] GetColisionMap()</Member>
        <Member type="Method">public char[,] GetRendered()</Member>
        <Member type="Method">public void ImposeFixture(int[,] colisionMap, bool[,] fixt, int x, int y)</Member>
        <Member type="Method">public void ImposeTexture(char[,] renderedMap, char[,] texture, int x, int y)</Member>
        <Member type="Method">void CallLoopEvents()</Member>
        <Member type="Method">void MoveByAcceleration()</Member>
        <Member type="Method">void CalcColisions()</Member>
        <Member type="Method">bool CheckColision(int[,] colisionMap, bool[,] fixt, int x, int y)</Member>
        <Member type="Method">bool ValideRange(int x, int y)</Member>
        <Member type="Method">void CalcAbroad()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>GameLogic</Name>
        <Access>Public</Access>
        <Location left="1265" top="323" />
        <Size width="416" height="400" />
        <Collapsed>False</Collapsed>
        <Member type="Field">int widthInAuto</Member>
        <Member type="Field">int heightInAuto</Member>
        <Member type="Field">int playerSpeed</Member>
        <Member type="Field">int loopDelay</Member>
        <Member type="Field">double machinesAtOneLine</Member>
        <Member type="Field">int pcMovesCount</Member>
        <Member type="Field">PlayerCar pc</Member>
        <Member type="Field">GameEngine ge</Member>
        <Member type="Field">int carW</Member>
        <Member type="Field">int carH</Member>
        <Member type="Field">Acceleration acc</Member>
        <Member type="Field">int machinesAtTenLinesResidue</Member>
        <Member type="Field">int normalLoopNumber</Member>
        <Member type="Constructor">public GameLogic(int widthInAuto, int heightInAuto, double machinesAtOneLine, int playerSpeed, int loopDelay)</Member>
        <Member type="Method">public void StartGame()</Member>
        <Member type="Method">void StartControlsThread()</Member>
        <Member type="Method">void StartRenderThread()</Member>
        <Member type="Method">string Draw(char[,] render)</Member>
        <Member type="Method">void OnGameFinish()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>PlayerCar</Name>
        <Access>Public</Access>
        <Location left="1511" top="965" />
        <Size width="162" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public PlayerCar()</Member>
        <Member type="Method">public override void OnColision()</Member>
        <Member type="Method">public override void OnAbroad()</Member>
        <Member type="Method">public override void OnEveryLoopStart()</Member>
        <Member type="Method">public void Move(MoveDirection moveDirection, double distance)</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="3" second="5">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
      <Relationship type="Association" first="5" second="4">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
      <Relationship type="Association" first="5" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
      <Relationship type="Association" first="5" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
      <Relationship type="Association" first="4" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Generalization" first="6" second="2">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="1" second="2">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="2" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
    </Relationships>
  </ProjectItem>
</Project>